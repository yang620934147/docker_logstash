input {
    stdin{
    }
    jdbc {
      # 数据库
      jdbc_connection_string => "jdbc:mysql://192.168.0.98:3306/qutanlu"
      # 用户名密码
      jdbc_user => "root"
      jdbc_password => "123456"
      # jar包的位置
      jdbc_driver_library => "/some/config-dir/mysql-connector-java-5.1.45.jar"
      # mysql的Driver
      jdbc_driver_class => "com.mysql.jdbc.Driver"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "50000"
      codec => plain { charset => "UTF-8"}
      tracking_column => gmt_modified
      jdbc_default_timezone => "Asia/Shanghai"
      #statement_filepath => "config-mysql/test02.sql"
      statement => "select * from bbs_article"
      schedule => "* * * * *"
      #索引的类型
      type => "bbs"
    }
}

filter {
    json {
        source => "message"
        remove_field => ["message"]
    }
 # date类型不能省略，不然会报错，       就是把当前字段+8小时后赋值给新的字段，然后再取新字段的值赋值给老的字段，再把新的字段删除
    date {
      match => ["message","UNIX_MS"]
      target => "@timestamp"
       }
         ruby {
                code => "event.set('timestamp', event.get('@timestamp').time.localtime + 8*60*60)"
         }      
        ruby{   
                code => "event.set('@timestamp',event.get('timestamp'))"
        }       
        mutate{ 
               remove_field => ["timestamp"]
        }      
        
   date {
    match => ["message","UNIX_MS"]
    target => "gmt_publish"
         } 
         ruby {
                 code => "event.set('@gmt_publish', event.get('gmt_publish').time.localtime + 8*60*60)"
         }       
        ruby {   
                 code => "event.set('gmt_publish',event.get('@gmt_publish'))"
         }       
        mutate { 
         remove_field => ["@gmt_publish"]
        }
        
        date {
        match => ["message","UNIX_MS"]
        target => "gmt_modified"
         }
         ruby {
                 code => "event.set('@gmt_modified', event.get('gmt_modified').time.localtime + 8*60*60)"
         }       
        ruby {   
                 code => "event.set('gmt_modified',event.get('@gmt_modified'))"
         }       
        mutate {
         remove_field => ["@gmt_modified"]
        }

	date {
        match => ["message","UNIX_MS"]
        target => "gmt_create"
         }
         ruby {
                 code => "event.set('@gmt_create', event.get('gmt_create').time.localtime + 8*60*60)"
         }
        ruby {
                 code => "event.set('gmt_create',event.get('@gmt_create'))"
         }
        mutate {
         remove_field => ["@gmt_create"]
        }
  }

output {
    elasticsearch {
        hosts => "192.168.0.98:9200"
        # index名
        index => "article"
        # 需要关联的数据库中有有一个id字段，对应索引的id号
        document_id => "%{article_id}"
    }
    stdout {
        codec => json_lines
    }
}
